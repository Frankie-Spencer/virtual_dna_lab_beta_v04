# core_V1.bngl
#
# This is the core function of the Virtual DNA Lab

#1DtileSys-1.txt is supposed to use an annealing protocol using rnf scripts

# NOTE: the 1DtileSys-2 model uses 1Dtiles with 2 sticking domains of 5 bases, each. This might explain why we can not obtain long chains of 1D tiles
# as one random unpair in the domain leaves in many cases just 2 consecutive bound bases, which unpair very quickly.
# Thus, in this model, 1DtileSys2-... we extend the sticking domains to 7 bases each

# The first part of a BNGL file is the parameters block, where you can define the rates
# of equations or the starting numbers of any of the molecular species.
begin parameters

  Temp 1
  k1 0.05
  k2 100
  k3 30
  k4 5
  k5 30
  k6 1
  k7 50
  k8 300
  # k9 10
  k10 1
  k11 150
end parameters



# Next, we define the set of molecule types in the system.  This is a declaration only, so
# we don't specify how many of each molecules there are, and we have to provide a list
# of all possible state values for each component of each molecule with a tilda (~)
# character.
begin molecule types
 N(b~A~T~C~G,5,3,W)

end molecule types



# Here is where we declare the starting molecules in our simulation.  Each component
# must be assigned a single state value, and we have to provide how many of each
# molecule exists in the system.  The number of starting molecules can also be
# specified with one of the parameters defined earlier
begin species


# We consider a tile system of 2 tiles which will tile the 1D line T1=s1.s2, T2=s1b.s2b  The two should assemble into 2 parallel lines,
# with ->...T1.T1.T1...-> on top and <-...T2.T2.T2...<- on the bottom row

# Molecule: CCAGTAC.GATTGCT 200 times
N(b~C,5,3!1,W).N(b~C,5!1,3!2,W).N(b~A,5!2,3!3,W).N(b~G,5!3,3!4,W).N(b~T,5!4,3!5,W).N(b~A,5!5,3!6,W).N(b~C,5!6,3!7,W).N(b~G,5!7,3!8,W).N(b~A,5!8,3!9,W).N(b~T,5!9,3!10,W).N(b~T,5!10,3!11,W).N(b~G,5!11,3!12,W).N(b~C,5!12,3!13,W).N(b~T,5!13,3,W) 50

# Molecule: GTACTGG.AGCAATC 50 times
N(b~G,5,3!1,W).N(b~T,5!1,3!2,W).N(b~A,5!2,3!3,W).N(b~C,5!3,3!4,W).N(b~T,5!4,3!5,W).N(b~G,5!5,3!6,W).N(b~G,5!6,3!7,W).N(b~A,5!7,3!8,W).N(b~G,5!8,3!9,W).N(b~C,5!9,3!10,W).N(b~A,5!10,3!11,W).N(b~A,5!11,3!12,W).N(b~T,5!12,3!13,W).N(b~C,5!13,3,W) 50


end species



# Observables allow us to define simulation output.  Here we have declared a number
# of Molecules observables with the given name and pattern.  If you look at the output
# gdat files that are generated from simulations of this model, you will see that they
# each have a count for every simulation time.
begin observables

   Molecules    N_Bound N(W!1).N(W!1)
   Molecules    N_notBound N(W)
   Molecules    N_notB_inComplex_V1 N(W).N(W!1).N(W!1)
   Molecules    N_notB_inComplex_V2 N(W).N(5).N(5)
   Molecules    Nr_complexes_V1 N(5).N(5)
   Molecules    Nr_complexes_V2 N(3).N(3)   
   Molecules    Nr_complexesV3 N(5,)
   #Species      Nr_complexesV4 N(5,)
   
end observables

# This model does not require any user-defined functions, but you would
# declare them here if you needed to.  See the user manual for help with
# declaring your own functions.
begin functions

fk5() = k5*Temp
fk6() = k6*Temp
fk7() = k7*Temp
fk8() = k8*Temp

fk10() = k10*Temp
fk11() = k11*Temp


end functions



# Here are the rule definitions:
# 1. binding interaction between length-3 complementary segments of two un-connected ssDNA k1=0.05
#
# 2. binding interaction between single complementary bases of two immediately-connected (immediate neighbor connection) ssDNA k2=200
#
# 3. binding interaction between single complementary bases of two closely-connected (1-off neighbor connection) ssDNA (possible to implement, if not too difficult) k3=30
#
# 4. binding interaction between length-2 complementary segments bases of two (possibly far-)  connected ssDNA k4=5
#
# 5. un-binding between complementary bases positioned at a split (i.e. both ssDNA strands continue with pairwise non-bounded sequences to one direction
# -at least one strand should not be bound to anything else- and bound sequences -of length at least 1- to the other direction) k5*Temp=30*Temp
#
# 6. un-binding between complementary bases positioned in the middle of a complementary sequence k6*Temp=1*Temp
#
# 7. un-binding between complementary bases where at least one ssDAN ends on that position. k7*Temp=50*Temp
#
# 8. rapid un-binding between single complementary bases in the middle of non-complementary (or non-bound) sequences k8*Temp=200*Temp
#
# 8+. rapid un-binding between a single complementary base at the end of a sequence k8*Temp=200*Temp
#
# 8++ rapid un-biding between a single complementary base, where the complement is on the same ssDNA, at distance 0 or 1
#
# 9 rapid un-binding at a nick point between sequences s1 and s2 above and s3 below, where s1 is bound to s3 just by one base (actually, this is covered by rule 8 applied to s1 and s3)
#
# 9+ rapid un-binding at a nick point between sequences s1 and s2 above and s3 below, where s2 is bound to s3 just by one base (actually, this is covered by rule 8 applied to s2 and s3)
#
# 10 random unbinding of a pair of bound nucleotides k10*Temp=1*Temp
#
# 11. rapid un-binding between a size-2 sequence of complementary bases in the middle of non-complementary (or non-bound) sequences k11*Temp=150*Temp
#
# 11+. rapid un-binding between a size-2 sequence of complementary base at the end of a sequence
#


begin reaction rules


#1 binding interaction between length-3 complementary segments of two un-connected ssDNA

N(b~A,3!1,W).N(b~A,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~T,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~A,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~T,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~A,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~T,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~A,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~T,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~T,5!4,W!5) k1

N(b~A,3!1,W).N(b~T,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~A,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~T,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~A,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~T,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~A,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~T,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~A,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~T,5!4,W!5) k1

N(b~A,3!1,W).N(b~C,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~G,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~C,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~G,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~C,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~G,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~C,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~G,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~T,5!4,W!5) k1

N(b~A,3!1,W).N(b~G,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~C,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~G,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~C,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~G,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~C,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~T,5!4,W!5) k1
N(b~A,3!1,W).N(b~G,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~C,5!3,3!4,W).N(b~T,5!4,W) -> N(b~A,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~T,5!4,W!5) k1



N(b~T,3!1,W).N(b~A,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~T,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~A,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~T,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~A,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~T,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~A,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~T,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~A,5!4,W!5) k1

N(b~T,3!1,W).N(b~T,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~A,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~T,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~A,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~T,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~A,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~T,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~A,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~A,5!4,W!5) k1

N(b~T,3!1,W).N(b~C,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~G,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~C,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~G,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~C,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~G,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~C,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~G,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~A,5!4,W!5) k1

N(b~T,3!1,W).N(b~G,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~C,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~G,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~C,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~G,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~C,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~A,5!4,W!5) k1
N(b~T,3!1,W).N(b~G,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~C,5!3,3!4,W).N(b~A,5!4,W) -> N(b~T,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~A,5!4,W!5) k1



N(b~C,3!1,W).N(b~A,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~T,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~A,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~T,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~A,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~T,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~A,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~T,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~G,5!4,W!5) k1

N(b~C,3!1,W).N(b~T,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~A,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~T,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~A,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~T,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~A,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~T,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~A,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~G,5!4,W!5) k1

N(b~C,3!1,W).N(b~C,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~G,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~C,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~G,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~C,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~G,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~C,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~G,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~G,5!4,W!5) k1

N(b~C,3!1,W).N(b~G,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~C,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~G,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~C,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~G,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~C,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~G,5!4,W!5) k1
N(b~C,3!1,W).N(b~G,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~C,5!3,3!4,W).N(b~G,5!4,W) -> N(b~C,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~G,5!4,W!5) k1



N(b~G,3!1,W).N(b~A,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~T,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~A,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~T,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~A,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~T,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~A,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~T,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~A,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~T,5!3,3!4,W!6).N(b~C,5!4,W!5) k1

N(b~G,3!1,W).N(b~T,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~A,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~T,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~A,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~T,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~A,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~T,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~A,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~T,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~A,5!3,3!4,W!6).N(b~C,5!4,W!5) k1

N(b~G,3!1,W).N(b~C,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~G,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~C,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~G,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~C,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~G,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~C,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~G,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~C,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~G,5!3,3!4,W!6).N(b~C,5!4,W!5) k1

N(b~G,3!1,W).N(b~G,5!1,3!2,W).N(b~A,5!2,W) + N(b~T,3!3,W).N(b~C,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~A,5!2,W!7).N(b~T,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~G,5!1,3!2,W).N(b~T,5!2,W) + N(b~A,3!3,W).N(b~C,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~T,5!2,W!7).N(b~A,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~G,5!1,3!2,W).N(b~C,5!2,W) + N(b~G,3!3,W).N(b~C,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~C,5!2,W!7).N(b~G,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~C,5!4,W!5) k1
N(b~G,3!1,W).N(b~G,5!1,3!2,W).N(b~G,5!2,W) + N(b~C,3!3,W).N(b~C,5!3,3!4,W).N(b~C,5!4,W) -> N(b~G,3!1,W!5).N(b~G,5!1,3!2,W!6).N(b~G,5!2,W!7).N(b~C,3!3,W!7).N(b~C,5!3,3!4,W!6).N(b~C,5!4,W!5) k1





# 2. binding interaction between single complementary bases of two immediately-connected (immediate neighbor connection) ssDNA 
#
N(b~A,W,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W,b~T)  -> N(b~A,W!4,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W!4,b~T)  k2
N(b~T,W,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W,b~A)  -> N(b~T,W!4,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W!4,b~A)  k2
N(b~C,W,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W,b~G)  -> N(b~C,W!4,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W!4,b~G)  k2
N(b~G,W,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W,b~C)  -> N(b~G,W!4,3!1).N(5!1,W!2).N(W!2,3!3).N(5!3,W!4,b~C)  k2

# 3. binding interaction between single complementary bases of two closely-connected (1-off neighbor connection) ssDNA (possible to implement, if not too difficult)
#
N(b~A,W,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W,b~T) -> N(b~A,W!4,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W!4,b~T) k3
N(b~T,W,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W,b~A) -> N(b~T,W!4,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W!4,b~A) k3
N(b~C,W,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W,b~G) -> N(b~C,W!4,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W!4,b~G) k3
N(b~G,W,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W,b~C) -> N(b~G,W!4,3!1).N(5!1,3!5).N(5!5,W!2).N(W!2,3!3).N(5!3,3!6).N(5!6,W!4,b~C) k3

# 4. binding interaction between length-2 complementary segments bases of two (possibly far-)  connected ssDNA
#

N(b~A,3!1,W).N(b~A,5!1,W).N(b~T,3!2,W).N(b~T,5!2,W) -> N(b~A,3!1,W!3).N(b~A,5!1,W!4).N(b~T,3!2,W!4).N(b~T,5!2,W!3) k4
N(b~A,3!1,W).N(b~C,5!1,W).N(b~G,3!2,W).N(b~T,5!2,W) -> N(b~A,3!1,W!3).N(b~C,5!1,W!4).N(b~G,3!2,W!4).N(b~T,5!2,W!3) k4
N(b~A,3!1,W).N(b~G,5!1,W).N(b~C,3!2,W).N(b~T,5!2,W) -> N(b~A,3!1,W!3).N(b~G,5!1,W!4).N(b~C,3!2,W!4).N(b~T,5!2,W!3) k4
N(b~A,3!1,W).N(b~T,5!1,W).N(b~A,3!2,W).N(b~T,5!2,W) -> N(b~A,3!1,W!3).N(b~T,5!1,W!4).N(b~A,3!2,W!4).N(b~T,5!2,W!3) k4

N(b~C,3!1,W).N(b~A,5!1,W).N(b~T,3!2,W).N(b~G,5!2,W) -> N(b~C,3!1,W!3).N(b~A,5!1,W!4).N(b~T,3!2,W!4).N(b~G,5!2,W!3) k4
N(b~C,3!1,W).N(b~C,5!1,W).N(b~G,3!2,W).N(b~G,5!2,W) -> N(b~C,3!1,W!3).N(b~C,5!1,W!4).N(b~G,3!2,W!4).N(b~G,5!2,W!3) k4
N(b~C,3!1,W).N(b~G,5!1,W).N(b~C,3!2,W).N(b~G,5!2,W) -> N(b~C,3!1,W!3).N(b~G,5!1,W!4).N(b~C,3!2,W!4).N(b~G,5!2,W!3) k4


N(b~G,3!1,W).N(b~A,5!1,W).N(b~T,3!2,W).N(b~C,5!2,W) -> N(b~G,3!1,W!3).N(b~A,5!1,W!4).N(b~T,3!2,W!4).N(b~C,5!2,W!3) k4
N(b~G,3!1,W).N(b~C,5!1,W).N(b~G,3!2,W).N(b~C,5!2,W) -> N(b~G,3!1,W!3).N(b~C,5!1,W!4).N(b~G,3!2,W!4).N(b~C,5!2,W!3) k4

N(b~T,3!1,W).N(b~A,5!1,W).N(b~T,3!2,W).N(b~A,5!2,W) -> N(b~T,3!1,W!3).N(b~A,5!1,W!4).N(b~T,3!2,W!4).N(b~A,5!2,W!3) k4


# 5. un-binding between complementary bases positioned at a split (i.e. both ssDNA strands, s1 top and s2 bottom, continue with pairwise non-bounded sequences)
# Case 1: the left side of the top strand is not connected to another strand

N(3!1,W).N(5!1,3!2,W!5).N(5!2,W!6).N(3!3,W!6).N(5!3,3!4,W!5).N(5!4) -> N(3!1,W).N(5!1,3!2,W).N(5!2,W!6).N(3!3,W!6).N(5!3,3!4,W).N(5!4) fk5()

# Case 2: the left side of the bottom strand is not connected to another strand s3

N(3!1).N(5!1,3!2,W!5).N(5!2,W!6).N(3!3,W!6).N(5!3,3!4,W!5).N(5!4,W) -> N(3!1).N(5!1,3!2,W).N(5!2,W!6).N(3!3,W!6).N(5!3,3!4,W).N(5!4,W) fk5()


# 6. un-binding between complementary bases positioned in the middle of a complementary sequence
#

N(3!1,W!+).N(5!1,3!2,W!5).N(5!2,W!6).N(3!3,W!6).N(5!3,3!4,W!5).N(5!4,W!+) -> N(3!1,W!+).N(5!1,3!2,W).N(5!2,W!6).N(3!3,W!6).N(5!3,3!4,W).N(5!4,W!+) fk6()
N(3!1,W!7).N(5!1,3!2,W!5).N(5!2,W!+).N(3!3,W!+).N(5!3,3!4,W!5).N(5!4,W!7) -> N(3!1,W!7).N(5!1,3!2,W).N(5!2,W!+).N(3!3,W!+).N(5!3,3!4,W).N(5!4,W!7) fk6()

# 7. un-binding between complementary bases where at least one ssDAN ends on that position.
#

N(5!+,3!1,W!4).N(5!1,W!3).N(3!2,W!3).N(5!2,3,W!4) -> N(5!+,3!1,W).N(5!1,W!3).N(3!2,W!3).N(5!2,3,W) fk7()
N(3!1,W!4).N(5!1,3!+,W!3).N(3!2,5,W!3).N(5!2,W!4) -> N(3!1,W!4).N(5!1,3!+,W).N(3!2,5,W).N(5!2,W!4) fk7()

# 8. rapid un-binding between single complementary bases in the middle of non-complementary (or non-bound) sequences
#

N(3!1,W).N(5!1,3!2,W!3).N(5!2,W).N(W!3) -> N(3!1,W).N(5!1,3!2,W).N(5!2,W) + N(W) fk8()

N(3!1,W!+).N(5!1,3!2,W!3).N(5!2,W).N(3!6,W!3).N(5!6,W) -> N(3!1,W!+).N(5!1,3!2,W).N(5!2,W) + N(3!6,W).N(5!6,W) fk8()
N(3!1,W).N(5!1,3!2,W!3).N(5!2,W!+).N(5!6,W!3).N(3!6,W) -> N(3!1,W).N(5!1,3!2,W).N(5!2,W!+) + N(5!6,W).N(3!6,W) fk8()

# 8+. rapid un-binding between a single complementary base at the end of a sequence
#

N(3!1,W).N(5!1,3,W!2).N(W!2) -> N(3!1,W).N(5!1,3,W) + N(W) fk8()
N(3!1,W!+).N(5!1,3,W!2).N(3!4,W!2).N(5!4,W) -> N(3!1,W!+).N(5!1,3,W) + N(3!4,W).N(5!4,W) fk8()


N(5,3!1,W!2).N(5!1,W).N(W!2) -> N(5,3!1,W).N(5!1,W) + N(W) fk8()
N(5,3!1,W!2).N(5!1,W!+).N(W!2,5!4).N(3!4,W) -> N(5,3!1,W).N(5!1,W!+) + N(W,5!4).N(3!4,W) fk8()


#8++ rapid un-biding between a single complementary base, where the complement is on the same ssDNA at distance 0 or 1
#

N(5!1,W!2).N(3!1,W!2) -> N(5!1,W).N(3!1,W) fk8()

N(5!1,W!3).N(3!1,5!2).N(3!2,W!3) -> N(5!1,W).N(3!1,5!2).N(3!2,W) fk8()



# 9 rapid un-binding at a nick point between sequences s1 and s2 above (5' to 3' direction) and s3 below, where s1 is bound to s3 just by one base
#
# 9+ rapid un-binding at a nick point between sequences s1 and s2 above (5' to 3' direction) and s3 below, where s2 is bound to s3 just by one base
#



#10 random unbinding of a pair of bound nucleotides 
#NOTE -see if it behaves accordingly, i.e., if after one un-bounding from a longer sequence it does not split the two sequences
#

N(W!1).N(W!1) -> N(W) + N(W) fk10()


# 11. rapid un-binding between a size-2 sequence of complementary bases in the middle of non-complementary (or non-bound) sequences
#

N(3!1,W).N(5!1,3!2,W!7).N(5!2,3!3,W!8).N(5!3,W).N(3!5,W!8).N(5!5,W!7) ->  N(3!1,W).N(5!1,3!2,W).N(5!2,3!3,W).N(5!3,W) + N(3!5,W).N(5!5,W) fk11()

N(3!1,W!+).N(5!1,3!2,W!7).N(5!2,3!3,W!8).N(5!3,W).N(3!5,W!8).N(5!5,3!6,W!7).N(5!6,W) ->  N(3!1,W!+).N(5!1,3!2,W).N(5!2,3!3,W).N(5!3,W) + N(3!5,W).N(5!5,3!6,W).N(5!6,W) fk11()
N(3!1,W).N(5!1,3!2,W!7).N(5!2,3!3,W!8).N(5!3,W!+).N(3!6,W).N(5!6,3!5,W!8).N(5!5,W!7) ->  N(3!1,W).N(5!1,3!2,W).N(5!2,3!3,W).N(5!3,W!+) + N(3!6,W).N(5!6,3!5,W).N(5!5,W) fk11()


#NOTE check that the rule acts as it suppose, i.e. if the two strands are connected just on a point, then they break and form 2 complexes; on the other hand, if the 2 strands are connected also later on, then they will still form just one complex

# 11+. rapid un-binding between a size-2 sequence of complementary base at the end of a sequence
#

N(3!1,W).N(5!1,3!2,W!7).N(5!2,3,W!8).N(3!3,W!8).N(5!3,W!7) -> N(3!1,W).N(5!1,3!2,W).N(5!2,3,W) + N(3!3,W).N(5!3,W) fk11()
N(3!1,W!+).N(5!1,3!2,W!7).N(5!2,3,W!8).N(3!3,W!8).N(5!3,3!4,W!7).N(5!4,W) -> N(3!1,W!+).N(5!1,3!2,W).N(5!2,3,W) + N(3!3,W).N(5!3,3!4,W).N(5!4,W) fk11()


N(5,3!1,W!7).N(5!1,3!2,W!8).N(5!2,W).N(3!3,W!8).N(5!3,W!7) -> N(5,3!1,W).N(5!1,3!2,W).N(5!2,W) + N(3!3,W).N(5!3,W) fk11()
N(5,3!1,W!7).N(5!1,3!2,W!8).N(5!2,W!+).N(3!4,W).N(5!4,3!3,W!8).N(5!3,W!7) -> N(5,3!1,W).N(5!1,3!2,W).N(5!2,W!+) + N(3!4,W).N(5!4,3!3,W).N(5!3,W) fk11()


end reaction rules






# COMMAND FOR RUNNING OR PROCESSING THIS BNGL FILE

# Now we can run NFsim directly from BioNetGen using the simulate_nf command, where
# "t_end" is the simulation time, "n_steps" is the number of steps, and "suffix" is
# the filename ending of this run.  The suffix allows us to run the same model
# multiple times here, and distinguish between all the runs with different "suffix"s.
# Note that this step will also automatically create an NFsim readable XML model
# specification file.
 
# simulate_nf({suffix=>nf,t_end=>0.001,n_steps=>4,complex=>1});

# the flag complex=>1 turns bookkeeping off in bngl, while in nfsim bookkeeping is off by default
# in our DNA_VLab system, we assume complex bookkeeping to be off

# We can also use the keyword "param" to pass any command line arguments to NFsim
# that we want.  As an example, we can rerun the model with the verbose (-v) option
# and the universal traversal limit (-utl) option.  See the manual for a description
# of Universal Traversal Limits, and other command line arguments.
# simulate_nf({suffix=>nfVerbose,t_end=>100,n_steps=>50,param=>"-v -utl 3"});





# If we want to run NFsim directly from the console, and ignore BioNetGen altogether
# after the BNGL file has been processed, we need to include the "writeXML" command.
# This will write out your model to "simple_system.xml".  In general, the XML file
# name will match the BNGL file name, with an XML extension instead of .bngl.
#
# writeXML();
#
# If you uncomment and use this command here, then you can run NFsim directly by
# calling the NFsim_[version] executable from the command-line, where [version] is
# the NFsim version that matches your operating system.  See the user manual for more
# help.




# Finally, if we want to simulate this model with ordinary differential equations (ODEs)
# of with Gillespie's stochastic simulation algorithm (SSA) in BioNetGen, we have
# to first generate the reaction network with the following command.  The overwrite
# option (which you can remove) is set to 1 here so that every time this is run, the
# reaction network output file will be regenerated.
#
#generate_network({overwrite=>1});
#
# Then we can call the simulate_ode or simulate_ssa methods to run the model file.  Again,
# the suffix parameter is used to name the output of the simulations.  Note also that
# between BioNetGen ODE and SSA simulation commands, we have to reset the molecule concentrations.
# this is needed because BioNetGen allows you to restart a simulation from the end of
# a previous simulation.  While this does not apply to NFsim, you can still change parameters 
# mid-simulation by using an RNF script (see example.rnf file in the same directory as this
# model).
#
#simulate_ode({suffix=>ode,t_end=>100,n_steps=>50});
#resetConcentrations();
#simulate_ssa({suffix=>ssa,t_end=>100,n_steps=>50});




